# SConscript
#
# Copyright 2013 Thomas Sigurdsen <thomas.sigurdsen@gmail.com>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
# MA 02110-1301, USA.

# vi: syntax=python:et:ts=4
import sys, os

# Get the environment and start configuring (checking for libs and so on)
env = Environment()
conf = Configure(env)

# Platform specific compiler flags
if sys.platform.startswith('linux'):
    env.Append(CCFLAGS = ['-ggdb3',\
                    '-O0',\
                    '-Wall',\
                    '-std=c++0x'\
                    ])#,'-pedantic'])#,'-Weffc++'])
    env["ENV"]["PKG_CONFIG_PATH"] = os.environ.get("PKG_CONFIG_PATH")
    env.ParseConfig("pkg-config --cflags --libs 'sfml-all >= 2'")
elif sys.platform.startswith('win32'):
    # Windows(visual studio compiler, cygwin has a different platform name) specific compiler flags
    print "WARNING: No win32 specific flags set."
    print "WARNING: No library checks are used."
    print "WARNING: This means SCons does _not_ check for any libraries or library versions"

env.Append(LIBS = ['sfml-window','sfml-graphics','sfml-system','sfml-audio'])

# End configuring
env = conf.Finish()

# Build phase
sources = Glob('*.cpp')
object_list = env.Object(source = sources)
prog = env.Program(target='../sp13', source = object_list)
Default(prog)
